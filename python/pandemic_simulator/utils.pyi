from typing import Any, Dict, List, Type

import numpy as np

def required() -> _T: ...
def abstract_class_property() -> _T: ...
def checked_cast(type: Type[_T], obj: Any) -> _T: ...
def shallow_asdict(x: Any) -> Dict[str, Any]: ...
def cluster_into_random_sized_groups(
    orig_list: List[int],
    min_group_size: int,
    max_group_size: int,
    numpy_rng: np.random.RandomState,
) -> List[List[int]]: ...
def integer_partitions(x: int, n_partitions: int) -> List[int]: ...
