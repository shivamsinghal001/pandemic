import numpy as np
from ..data import ExperimentResult, StageSchedule
from _typeshed import Incomplete
from matplotlib.axes import Axes
from typing import Optional, Sequence

inf_colors: Incomplete

def get_stage_strategy(stage_data: np.ndarray) -> Sequence[StageSchedule]: ...
def plot_annotate_stages(exp_result: ExperimentResult, ax: Axes) -> None: ...
def plot_global_infection_summary(exp_result: ExperimentResult, testing_summary: bool = ..., show_variance: bool = ..., annotate_stages: bool = ..., ax: Optional[Axes] = ...) -> None: ...
def plot_critical_summary(exp_result: ExperimentResult, max_hospital_capacity: int, show_variance: bool = ..., annotate_stages: bool = ..., ax: Optional[Axes] = ...) -> None: ...
def plot_deaths_per_day_summary(exp_result: ExperimentResult, show_variance: bool = ..., annotate_stages: bool = ..., ax: Optional[Axes] = ...) -> None: ...
def plot_cumulative_reward(exp_result: ExperimentResult, show_variance: bool = ..., annotate_stages: bool = ..., ax: Optional[Axes] = ...) -> None: ...
def plot_multi_params_summary(exp_results: Sequence[ExperimentResult], param_labels: Sequence[str], max_hospitals_capacities: Sequence[int], show_testing_diff_plot: bool = ..., show_time_to_peak: bool = ..., show_cumulative_reward_plot: bool = ..., show_pandemic_duration: bool = ..., xlabel: str = ..., axs: Optional[Sequence[Axes]] = ...) -> None: ...
